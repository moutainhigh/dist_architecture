<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.xpay.facade.timer.entity.Namespace">
	<sql id="table"> qrtz_namespace </sql>

	<!-- 用于返回的bean对象 -->
	<resultMap id="BaseResultMap" type="com.xpay.facade.timer.entity.Namespace">
		<result column="NAMESPACE" property="namespace" jdbcType="VARCHAR"/>
		<result column="NAME_CN" property="nameCn" jdbcType="VARCHAR"/>
		<result column="STATUS" property="status" jdbcType="TINYINT"/>
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
		<result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP"/>
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		NAMESPACE,
		NAME_CN,
		STATUS,
		CREATE_TIME,
		UPDATE_TIME
	</sql>

	<!-- 插入记录 -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.xpay.facade.timer.entity.Namespace">
		INSERT INTO <include refid="table" /> (
		NAMESPACE,
		NAME_CN,
		STATUS,
		CREATE_TIME,
		UPDATE_TIME
		) VALUES (
		#{namespace,jdbcType=VARCHAR},
		#{nameCn,jdbcType=VARCHAR},
		#{status,jdbcType=TINYINT},
		#{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>

	<!-- 批量插入记录 -->
	<insert id="batchInsert" useGeneratedKeys="true" keyProperty="id" parameterType="list">
		INSERT INTO <include refid="table" /> (
		NAMESPACE,
		NAME_CN,
		STATUS,
		CREATE_TIME,
		UPDATE_TIME
		) VALUES
		<foreach collection="list" item="item" open="(" separator="," close=")">
			#{item.namespace,jdbcType=VARCHAR},
			#{item.nameCn,jdbcType=VARCHAR},
			#{item.status,jdbcType=TINYINT},
			#{item.createTime,jdbcType=TIMESTAMP},
			#{item.updateTime,jdbcType=TIMESTAMP}
		</foreach>
	</insert>

	<!--更新-->
	<update id="update" parameterType="com.xpay.facade.timer.entity.Namespace">
		UPDATE <include refid="table" />
		<set>
			STATUS = #{status,jdbcType=TINYINT},
			UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
		</set>
		WHERE NAMESPACE = #{namespace,jdbcType=VARCHAR}
	</update>

	<!-- 多条件组合查询 -->
	<select id="listBy" parameterType="java.util.Map" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

	<!-- 计算总记录数 -->
	<select id="countBy" parameterType="java.util.Map" resultType="long">
		SELECT count(NAMESPACE) FROM
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

	<!--按查询条件删除-->
	<delete id="deleteBy">
		DELETE FROM <include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
	</delete>

	<!-- 根据多个id查询 -->
	<select id="listByIdList" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM <include refid="table" />
		WHERE NAMESPACE IN
		<foreach collection="list" item="item" open="(" separator="," close=")">#{item,jdbcType=VARCHAR}</foreach>
	</select>

	<!-- 根据id查询 -->
	<select id="getById" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM <include refid="table" />
		WHERE NAMESPACE = #{namespace,jdbcType=VARCHAR}
	</select>

	<!--按id主键删除-->
	<delete id="deleteById">
		DELETE FROM <include refid="table" /> WHERE NAMESPACE = #{namespace,jdbcType=VARCHAR}
	</delete>

	<!--按多个id主键删除-->
	<select id="deleteByIdList" parameterType="list">
		SELECT <include refid="Base_Column_List" />
		FROM <include refid="table" />
		WHERE NAMESPACE IN
		<foreach collection="list" item="item" open="(" separator="," close=")">#{item,jdbcType=VARCHAR}</foreach>
	</select>

	<!-- ↑↑↑↑↑↑ 如果有新增字段、删除字段、修改字段 以上内容可用模板生成新内容后直接替换 ↑↑↑↑↑↑ -->
	<!-- ↓↓↓↓↓↓ 以下内容是根据需求手动添加或修改的，请勿使用模板内容直接覆盖 ↓↓↓↓↓↓ -->
	<sql id="condition_sql">
		<if test="namespace != null ">
			AND NAMESPACE = #{namespace,jdbcType=VARCHAR}
		</if>
		<if test="status != null ">
			AND STATUS = #{status,jdbcType=TINYINT}
		</if>
	</sql>

	<update id="updateStatus" parameterType="map">
		UPDATE <include refid="table" />
		<set>
			STATUS = #{status,jdbcType=TINYINT},
			UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
		</set>
		WHERE NAMESPACE = #{namespace,jdbcType=VARCHAR}
	</update>
</mapper>

